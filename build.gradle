plugins { 
	          id 'org.springframework.boot' version '2.3.3.RELEASE'
			  id "io.spring.dependency-management" version "1.0.10.RELEASE"
			  id "org.sonarqube" version "3.0"
			  id 'java'
			  id  'eclipse'   
	  }
	  
repositories {
    jcenter()
}

sourceCompatibility = '1.8'


sourceSets {
	intTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
	
}

configurations {
	intTestImplementation.extendsFrom implementation
	intTestCompile.extendsFrom testCompile
	intTestRuntimeOnly.extendsFrom runtimeOnly
	
}

dependencies {
    
     implementation 'org.springframework.boot:spring-boot-starter-web'
	 implementation  'org.springframework.boot:spring-boot-starter-data-jpa'
	 implementation 'org.modelmapper:modelmapper:2.3.8'
	 implementation 'javax.validation:validation-api:2.0.1.Final'
	 implementation 'org.springframework.boot:spring-boot-starter-validation'
	 implementation 'org.modelmapper:modelmapper:2.3.8'
	 implementation 'org.postgresql:postgresql:42.2.16'
	 
	 testImplementation 'org.springframework.boot:spring-boot-starter-test' 
     testImplementation 'io.rest-assured:spring-mock-mvc:4.3.1'
	 testImplementation  'io.rest-assured:rest-assured-common:4.3.1'
     
	 intTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	 intTestImplementation 'io.rest-assured:spring-mock-mvc:4.1.2'
	 intTestImplementation  'io.rest-assured:rest-assured-common:4.3.1'
}

test {
    useJUnitPlatform()
}


task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.intTest.output.classesDirs
	classpath = sourceSets.intTest.runtimeClasspath
	shouldRunAfter test
}



sonarqube {
    properties {
		property "sonar.projectKey", "todobackend"
        property "sonar.sources", "src/main"
       }
    } 
    
    check.dependsOn integrationTest
    
 



